/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.spotbugs' version '4.6.0'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'org.apache.commons:commons-csv:1.8'
    implementation 'org.apache.poi:poi-ooxml:4.1.2'
    implementation 'org.apache.logging.log4j:log4j-api:2.11.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.11.2'
    implementation 'com.monitorjbl:xlsx-streamer:2.1.0'
    implementation 'org.slf4j:slf4j-log4j12:1.7.6'
    implementation 'log4j:log4j:1.2.17'
    testImplementation 'junit:junit:4.11'
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
    spotbugs 'com.github.spotbugs:spotbugs:4.0.0'
}

group = 'org.example'
version = '1.0-SNAPSHOT'
description = 'ExcelReportAnalyzer'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}
spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}
spotbugs {
    ignoreFailures = false
    showStackTraces = true
    showProgress = true
    effort = 'default'
    reportLevel = 'default'
    visitors = [ 'FindSqlInjection', 'SwitchFallthrough' ]
    omitVisitors = [ 'FindNonShortCircuit' ]
    reportsDir = file("$buildDir/spotbugs")
    // includeFilter = file("include.xml")
    excludeFilter = file("exclude.xml")
   // baselineFile = file("baseline.xml")
   // onlyAnalyze = [ 'com.foobar.MyClass', 'com.foobar.mypkg.*' ]
    maxHeapSize = '1g'
    extraArgs = [ '-nested:false' ]
    jvmArgs = [ '-Duser.language=ja' ]
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
